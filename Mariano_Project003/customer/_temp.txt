    
    
    urlpatterns = [

     
     # this is now home page since in main urls.py specify path('', RedirectView.as_view(url="customer/")), 
     # and in settings.py specify ligin-redirect to home page so after login go to home page 
     # which in turn come to here
     path("", views.one, name='nm-001'),
    
    path("restricted001", views.restricted001,name="nm-resttricted001"),
     
     

    path("list", views.CustomerList.as_view(), name='nm-customer-list'),
  
     # create customer using Model Forms (really good but class based views even better)
     path("two", views.createcustomer, name='nm-createcustomer1'),
     
     # create customer using class Bassed Views (recommended)
     path("register/", views.CustomerCreate.as_view(), name='nm-createcustomer2'),
     path("list/", views.CustomerList.as_view(), name='nm-customer-list'),
     path('update/<int:pk>/',views.CustomerUpdate.as_view(),name='nm-customer-update'),


     path('detail/<int:pk>/',views.CustomerDetail.as_view(),name='nm-customer-detail'),
     path('signup/',views.SignUpView.as_view(),name="nm-signup"),
 


     
     # thank you
     path("four", views.thankyou, name='nm-thankyou'),

    ]


    ----------


# http://127.0.0.1:8000/customer/profile/1
def CustomerProfileOLD(request):

    uid=request.user.id
    print("request userID=", uid)

    if uid==None:
        return redirect(reverse("login" ))        
        pass


    
    profilecount= Customer.objects.filter(userID=uid).count()
    if profilecount==0:
        cust=Customer(userID=uid, preference1="none")
        cust.save()
        print("added profile")
        pass
    else:
        print("no profile added")



    #return CustomerUpdate.as_view() 
    #return HttpResponse("hello This is the Temporary Profile Page for Customer")
    #return redirect(reverse("nm-customer-update" ))
    #return HttpResponseRedirect(f'/customer/update/{uid}/')
    return HttpResponseRedirect (CustomerUpdate.as_view() )
    pass


 # for reference
class ReviewForm(ModelForm):
    class Meta:
        model=RentalModel
        fields=["firstname","surname",'rating',"comments"]
        labels={ "rating":"your rating"}

        widgets = {
            "comments": Textarea(attrs={"cols": 20, "rows": 4, 'class':'dashedred'}),
        }
        
        error_messages={
            'rating':{
                'min_value':'min value is 18',
                'max_value':'max value is 75',


            }
        }


    pass


                   <!-- works fine below -->
                {% for fld in form %}                
                <div class='mb-3'>
                    {{fld.label_tag}} <br/>    
                    {{fld.value }}
                    {{fld }}
                    {{fld.errors}}
               </div>
        
                {% endfor %}

   



    
